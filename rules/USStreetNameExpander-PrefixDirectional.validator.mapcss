meta
{
    title: "(US) Abbreviated Streetname Fixup, Directionals";
    version: "0,1_2023-08-28";
    description: "Expands common street name directional prefixes in the US";
    author: "watmildon";
    link: "TODOMAKELINK";
    baselanguage: "en";
    min-josm-version: 14481;
}

*[highway]["name"]["name"=~/^N /] {
assertNoMatch: "way \"name\"=North Main";
assertMatch: "way \"name\"=N Main";
throwWarning: tr("Highway name prefix N, may need to be expanded to North");
fixAdd: concat("name=", replace(tag("name"), "N ", "North "));
}

*[highway]["name"]["name"=~/^S /] {
assertNoMatch: "way \"name\"=South Main";
assertMatch: "way \"name\"=S Main";
throwWarning: tr("Highway name prefix S, may need to be expanded to South");
fixAdd: concat("name=", replace(tag("name"), "S ", "South "));
}

*[highway]["name"]["name"=~/^E /] {
assertNoMatch: "way \"name\"=East Main";
assertMatch: "way \"name\"=E Main";
throwWarning: tr("Highway name prefix E, may need to be expanded to East");
fixAdd: concat("name=", replace(tag("name"), "E ", "East "));
}

*[highway]["name"]["name"=~/^W /] {
assertNoMatch: "way \"name\"=West Main";
assertMatch: "way \"name\"=W Main";
throwWarning: tr("Highway name prefix W, may need to be expanded to West");
fixAdd: concat("name=", replace(tag("name"), "W ", "West "));
}

*["addr:street"]["addr:street"=~/^N /] {
assertNoMatch: "way \"addr:street\"=North Main";
assertMatch: "way \"addr:street\"=N Main";
throwWarning: tr("addr:street prefix N, may need to be expanded to North");
fixAdd: concat("addr:street=", replace(tag("addr:street"), "N ", "North "));
}

*["addr:street"]["addr:street"=~/^S /] {
assertNoMatch: "way \"addr:street\"=South Main";
assertMatch: "way \"addr:street\"=S Main";
throwWarning: tr("addr:street prefix S, may need to be expanded to South");
fixAdd: concat("addr:street=", replace(tag("addr:street"), "S ", "South "));
}

*["addr:street"]["addr:street"=~/^E /] {
assertNoMatch: "way \"addr:street\"=East Main";
assertMatch: "way \"addr:street\"=E Main";
throwWarning: tr("addr:street prefix E, may need to be expanded to East");
fixAdd: concat("addr:street=", replace(tag("addr:street"), "E ", "East "));
}

*["addr:street"]["addr:street"=~/^W /] {
assertNoMatch: "way \"addr:street\"=West Main";
assertMatch: "way \"addr:street\"=W Main";
throwWarning: tr("addr:street prefix W, may need to be expanded to West");
fixAdd: concat("addr:street=", replace(tag("addr:street"), "W ", "West "));
}

*[highway]["name"]["name"=~/^NE /] {
assertNoMatch: "way \"name\"=Northeast Main";
assertMatch: "way \"name\"=NE Main";
throwWarning: tr("Highway name prefix NE, may need to be expanded to Northeast");
fixAdd: concat("name=", replace(tag("name"), "NE ", "Northeast "));
}

*[highway]["name"]["name"=~/^SE /] {
assertNoMatch: "way \"name\"= Southeast Main";
assertMatch: "way \"name\"=SE Main";
throwWarning: tr("Highway name prefix SE, may need to be expanded to Southeast");
fixAdd: concat("name=", replace(tag("name"), "SE ", " Southeast "));
}

*[highway]["name"]["name"=~/^SW /] {
assertNoMatch: "way \"name\"=Southwest Main";
assertMatch: "way \"name\"=SW Main";
throwWarning: tr("Highway name prefix SW, may need to be expanded to Southwest");
fixAdd: concat("name=", replace(tag("name"), "SW ", "Southwest "));
}

*[highway]["name"]["name"=~/^NW /] {
assertNoMatch: "way \"name\"=Northwest Main";
assertMatch: "way \"name\"=NW Main";
throwWarning: tr("Highway name prefix NW, may need to be expanded to Northwest");
fixAdd: concat("name=", replace(tag("name"), "NW ", "Northwest "));
}

*["addr:street"]["addr:street"=~/^NE /] {
assertNoMatch: "way \"addr:street\"=Northeast Main";
assertMatch: "way \"addr:street\"=NE Main";
throwWarning: tr("addr:street prefix NE, may need to be expanded to Northeast");
fixAdd: concat("addr:street=", replace(tag("addr:street"), "NE ", "Northeast "));
}

*["addr:street"]["addr:street"=~/^SE /] {
assertNoMatch: "way \"addr:street\"= Southeast Main";
assertMatch: "way \"addr:street\"=SE Main";
throwWarning: tr("addr:street prefix SE, may need to be expanded to Southeast");
fixAdd: concat("addr:street=", replace(tag("addr:street"), "SE ", " Southeast "));
}

*["addr:street"]["addr:street"=~/^SW /] {
assertNoMatch: "way \"addr:street\"=Southwest Main";
assertMatch: "way \"addr:street\"=SW Main";
throwWarning: tr("addr:street prefix SW, may need to be expanded to Southwest");
fixAdd: concat("addr:street=", replace(tag("addr:street"), "SW ", "Southwest "));
}

*["addr:street"]["addr:street"=~/^NW /] {
assertNoMatch: "way \"addr:street\"=Northwest Main";
assertMatch: "way \"addr:street\"=NW Main";
throwWarning: tr("addr:street prefix NW, may need to be expanded to Northwest");
fixAdd: concat("addr:street=", replace(tag("addr:street"), "NW ", "Northwest "));
}