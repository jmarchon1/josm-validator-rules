meta
{
    title: "(US) Abbreviated Streetname Fixup, Postfix Directionals";
    version: "0,1_2023-08-29";
    description: "Expands common street name directional postfixes in the US";
    author: "watmildon";
    link: "TODOMAKELINK";
    baselanguage: "en";
    min-josm-version: 14481;
}

/*
[out:json][timeout:300];
{{geocodeArea:"Oregon,United States of America"}}->.a;
(
  nwr["addr:street"][name~" N$| S$| E$| W$| NE$| SE$| NW$| SW$"](area.a);
);
out body;
>;
out skel qt;
*/


*[highway]["name"]["name"=~/ N$/] {
assertNoMatch: "way \"name\"=North Main";
assertMatch: "way \"name\"=N Main";
throwWarning: tr("Highway name postfix N, may need to be expanded to North");
fixAdd: concat("name=", substring(tag("name"), 0,length(tag("name"))-1),"North");
}

*[highway]["name"]["name"=~/ S$/] {
assertNoMatch: "way \"name\"=South Main";
assertMatch: "way \"name\"=S Main";
throwWarning: tr("Highway name postfix S, may need to be expanded to South");
fixAdd: concat("name=", substring(tag("name"), 0,length(tag("name"))-1),"South");
}

*[highway]["name"]["name"=~/ E$/] {
assertNoMatch: "way \"name\"=East Main";
assertMatch: "way \"name\"=E Main";
throwWarning: tr("Highway name postfix E, may need to be expanded to East");
fixAdd: concat("name=", substring(tag("name"), 0,length(tag("name"))-1),"East");
}

*[highway]["name"]["name"=~/ W$/] {
assertNoMatch: "way \"name\"=West Main";
assertMatch: "way \"name\"=W Main";
throwWarning: tr("Highway name postfix W, may need to be expanded to West");
fixAdd: concat("name=", substring(tag("name"), 0,length(tag("name"))-1),"West");
}

*["addr:street"]["addr:street"=~/ N$/] {
assertNoMatch: "way \"addr:street\"=North Main";
assertMatch: "way \"addr:street\"=N Main";
throwWarning: tr("addr:street postfix N, may need to be expanded to North");
fixAdd: concat("addr:street=", substring(tag("addr:street"), 0,length(tag("addr:street"))-1),"North");
}

*["addr:street"]["addr:street"=~/ S$/] {
assertNoMatch: "way \"addr:street\"=South Main";
assertMatch: "way \"addr:street\"=S Main";
throwWarning: tr("addr:street postfix S, may need to be expanded to South");
fixAdd: concat("addr:street=", substring(tag("addr:street"), 0,length(tag("addr:street"))-1),"South");
}

*["addr:street"]["addr:street"=~/ E$/] {
assertNoMatch: "way \"addr:street\"=East Main";
assertMatch: "way \"addr:street\"=E Main";
throwWarning: tr("addr:street postfix E, may need to be expanded to East");
fixAdd: concat("addr:street=", substring(tag("addr:street"), 0,length(tag("addr:street"))-1),"East");
}

*["addr:street"]["addr:street"=~/ W$/] {
assertNoMatch: "way \"addr:street\"=West Main";
assertMatch: "way \"addr:street\"=W Main";
throwWarning: tr("addr:street postfix W, may need to be expanded to West");
fixAdd: concat("addr:street=", substring(tag("addr:street"), 0,length(tag("addr:street"))-1),"West");
}

*[highway]["name"]["name"=~/ NE$/] {
assertNoMatch: "way \"name\"=Northeast Main";
assertMatch: "way \"name\"=NE Main";
throwWarning: tr("Highway name postfix NE, may need to be expanded to Northeast");
fixAdd: concat("name=", substring(tag("name"), 0,length(tag("name"))-2),"Northeast");
}

*[highway]["name"]["name"=~/ SE$/] {
assertNoMatch: "way \"name\"= Southeast Main";
assertMatch: "way \"name\"=SE Main";
throwWarning: tr("Highway name postfix SE, may need to be expanded to Southeast");
fixAdd: concat("name=", substring(tag("name"), 0,length(tag("name"))-2),"Southeast");
}

*[highway]["name"]["name"=~/ SW$/] {
assertNoMatch: "way \"name\"=Southwest Main";
assertMatch: "way \"name\"=SW Main";
throwWarning: tr("Highway name postfix SW, may need to be expanded to Southwest");
fixAdd: concat("name=", substring(tag("name"), 0,length(tag("name"))-2),"Southwest");
}

*[highway]["name"]["name"=~/ NW$/] {
assertNoMatch: "way \"name\"=Northwest Main";
assertMatch: "way \"name\"=NW Main";
throwWarning: tr("Highway name postfix NW, may need to be expanded to Northwest");
fixAdd: concat("name=", substring(tag("name"), 0,length(tag("name"))-2),"Northwest");
}

*["addr:street"]["addr:street"=~/ NE$/] {
assertNoMatch: "way \"addr:street\"=Northeast Main";
assertMatch: "way \"addr:street\"=NE Main";
throwWarning: tr("addr:street postfix NE, may need to be expanded to Northeast");
fixAdd: concat("addr:street=", substring(tag("addr:street"), 0,length(tag("addr:street"))-2),"Northeast");
}

*["addr:street"]["addr:street"=~/ SE$/] {
assertNoMatch: "way \"addr:street\"= Southeast Main";
assertMatch: "way \"addr:street\"=SE Main";
throwWarning: tr("addr:street postfix SE, may need to be expanded to Southeast");
fixAdd: concat("addr:street=", substring(tag("addr:street"), 0,length(tag("addr:street"))-2),"Southeast");
}

*["addr:street"]["addr:street"=~/ SW$/] {
assertNoMatch: "way \"addr:street\"=Southwest Main";
assertMatch: "way \"addr:street\"=SW Main";
throwWarning: tr("addr:street postfix SW, may need to be expanded to Southwest");
fixAdd: concat("addr:street=", substring(tag("addr:street"), 0,length(tag("addr:street"))-2),"Southwest");
}

*["addr:street"]["addr:street"=~/^ NW$/] {
assertNoMatch: "way \"addr:street\"=Northwest Main";
assertMatch: "way \"addr:street\"=NW Main";
throwWarning: tr("addr:street postfix NW, may need to be expanded to Northwest");
fixAdd: concat("addr:street=", substring(tag("addr:street"), 0,length(tag("addr:street"))-2),"Northwest");
}