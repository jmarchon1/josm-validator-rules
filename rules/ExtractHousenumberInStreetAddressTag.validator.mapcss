meta
{
    title: "Extract housenumber from incorrect addr:street tag";
    version: "0,1_2023-08-16";
    description: "Fixes ALL CAPS key values to be Title Case";
    author: "watmildon";
    link: "TODOMAKELINK";
    baselanguage: "en";
    min-josm-version: 14481;
}

/*
[out:json][timeout:500];
// gather results
{{geocodeArea:United States}}->.searchArea;
(
  nwr["addr:street"~"^[0-9].+"](area.searchArea);
);
// print results
out body;
>;
out skel qt;
*/


*["addr:street"]["addr:street"=~/^[0-9] .+/] {
    assertNoMatch: "way \"addr:city\"=1st Street";
    assertMatch: "way \"addr:city\"=1 Main Street";
    throwWarning: tr("addr:street starts with a digit, likely need to be moved to addr:housenumber");
    fixAdd: concat("addr:street=", substring(tag("addr:street"),2));
    fixAdd: concat("addr:housenumber=", substring(tag("addr:street"),0,1));
}

*["addr:street"]["addr:street"=~/^[0-9]{2} .+/] {
    assertNoMatch: "way \"addr:city\"=1st Street";
    assertMatch: "way \"addr:city\"=12 Main Street";
    throwWarning: tr("addr:street starts with 2 digits, likely need to be moved to addr:housenumber");
    fixAdd: concat("addr:street=", substring(tag("addr:street"),3));
    fixAdd: concat("addr:housenumber=", substring(tag("addr:street"),0,2));
}

*["addr:street"]["addr:street"=~/^[0-9]{3} .+/] {
    assertNoMatch: "way \"addr:city\"=1st Street";
    assertMatch: "way \"addr:city\"=123 Main Street";
    throwWarning: tr("addr:street starts with 3 digits, likely need to be moved to addr:housenumber");
    fixAdd: concat("addr:street=", substring(tag("addr:street"),4));
    fixAdd: concat("addr:housenumber=", substring(tag("addr:street"),0,3));
}

*["addr:street"]["addr:street"=~/^[0-9]{4} .+/] {
    assertNoMatch: "way \"addr:city\"=1st Street";
    assertMatch: "way \"addr:city\"=1234 Main Street";
    throwWarning: tr("addr:street starts with 4 digits, likely need to be moved to addr:housenumber");
    fixAdd: concat("addr:street=", substring(tag("addr:street"),5));
    fixAdd: concat("addr:housenumber=", substring(tag("addr:street"),0,4));
}

*["addr:street"]["addr:street"=~/^[0-9]{5} .+/] {
    assertNoMatch: "way \"addr:city\"=1st Street";
    assertMatch: "way \"addr:city\"=12345 Main Street";
    throwWarning: tr("addr:street starts with 5 digits, likely need to be moved to addr:housenumber");
    fixAdd: concat("addr:street=", substring(tag("addr:street"),6));
    fixAdd: concat("addr:housenumber=", substring(tag("addr:street"),0,5));
}

*["addr:street"]["addr:street"=~/^[0-9]{6} .+/] {
    assertNoMatch: "way \"addr:city\"=1st Street";
    assertMatch: "way \"addr:city\"=123456 Main Street";
    throwWarning: tr("addr:street starts with 6 digits, likely need to be moved to addr:housenumber");
    fixAdd: concat("addr:street=", substring(tag("addr:street"),7));
    fixAdd: concat("addr:housenumber=", substring(tag("addr:street"),0,6));
}